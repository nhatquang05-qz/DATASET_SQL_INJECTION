import requests
import json

def load_payloads_from_json(json_path):
    try:
        with open(json_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"[!] Lỗi khi đọc file JSON: {e}")
        return []

def pentest_url(url, param_name, method="GET", headers=None, payloads=None):
    """
    Công cụ pentest bất kỳ trang web có thể bị SQLi.
    - url: đường dẫn đầy đủ (ví dụ "http://example.com/page.php")
    - param_name: tên tham số để tiêm payload (ví dụ "id", "name")
    - method: 'GET' hoặc 'POST'
    - headers: dict các header HTTP nếu cần
    - payloads: danh sách dict chứa payload và thông tin mô tả
    """
    headers = headers or {}
    session = requests.Session()

    for item in payloads:
        payload = item["payload"]
        full_payload = f"1{payload}"

        print(f"\n[*] Thử payload: {payload}")
        print(f"    - Kỹ thuật: {item.get('technique')}")
        print(f"    - Mức độ: {item.get('severity')}")
        print(f"    - Mục đích: {item.get('purpose')}")
        print(f"    - Mô tả: {item.get('description')}")

        try:
            if method.upper() == "GET":
                params = {param_name: full_payload}
                resp = session.get(url, params=params, headers=headers, timeout=10)
            elif method.upper() == "POST":
                data = {param_name: full_payload}
                resp = session.post(url, data=data, headers=headers, timeout=10)
            else:
                print("[!] Phương thức không hỗ trợ (chỉ GET hoặc POST).")
                return

            if resp.status_code == 200:
                content = resp.text.lower()
                if any(keyword in content for keyword in ["error", "syntax", "user", "password"]):
                    print("  ==> [!] Có dấu hiệu nghi ngờ SQLi (ví dụ: 'error', 'user', ...).")
                else:
                    print("  ==> [-] Không phát hiện dấu hiệu SQLi rõ ràng.")
            else:
                print(f"  ==> [!] HTTP {resp.status_code}")
        except Exception as e:
            print(f"  ==> [!] Lỗi khi gửi payload: {e}")

# === Chạy thử ===
if __name__ == "__main__":
    url = input("Nhập URL cần kiểm thử: ").strip()
    param = input("Nhập tên tham số: ").strip()
    method = input("Nhập phương thức (GET/POST): ").strip().upper()
    json_file = "output/payloads.json"  # Đường dẫn tới file JSON payload

    payloads = load_payloads_from_json(json_file)
    if payloads:
        pentest_url(url, param, method, payloads=payloads)
